{"version":3,"sources":["components/Tables.js","firebase.js","components/SignUp.js","components/Login.js","App.js","index.js"],"names":["Tables","tableData","console","log","useState","newData","setNewData","useEffect","date","Date","toLocaleDateString","newDateArr","map","newD","today","visitDay","dateOfVisit","getDate","getMonth","getFullYear","push","manipulateData","Table","striped","bordered","hover","tabularData","i","resident","visitor","time","code","createUserProfileDocument","user","a","userRef","db","doc","uid","get","exists","email","createdAt","set","message","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","authentication","auth","SignUp","setEmail","password","setPassword","setNewUser","history","useHistory","onChangeHandler","event","target","name","value","handleSubmit","e","preventDefault","createUserWithEmailAndPassword","then","userCredential","localStorage","setItem","JSON","stringify","catch","error","errorCode","errorMessage","style","width","margin","border","padding","to","Form","Group","controlId","Label","Control","type","placeholder","onChange","Text","className","Button","variant","onClick","signInWithEmailAndPassword","App","data","setData","collection","querySnapshot","docs","requestDetails","filter","col","length","marginBottom","exact","path","component","Login","render","props","getItem","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.84d932f7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst Tables = ({ tableData }) => {\r\n  console.log({ tableData });\r\n  const [newData, setNewData] = useState([]);\r\n\r\n  const manipulateData = () => {\r\n    let date = new Date().toLocaleDateString();\r\n    let newDateArr = [];\r\n    //console.log(data);\r\n    for (let newDate of tableData) {\r\n      //console.log(newDate);\r\n\r\n      newDate.map((newD) => {\r\n        let today = new Date(date);\r\n        let visitDay = new Date(newD.dateOfVisit);\r\n        //console.log(visitDay);\r\n        if (\r\n          visitDay.getDate() === today.getDate() &&\r\n          visitDay.getMonth() === today.getMonth() &&\r\n          visitDay.getFullYear() === today.getFullYear()\r\n        ) {\r\n          newDateArr.push(newD);\r\n          //newDateArr.push(newD);\r\n          //console.log(newDateArr);\r\n        }\r\n        //console.log(newDateArr);\r\n        setNewData(newDateArr);\r\n        return newDateArr;\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    manipulateData();\r\n  }, [tableData]);\r\n\r\n  //console.log(newData);\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Resident Name</th>\r\n            <th>Visitor Name</th>\r\n            <th>Date of Visit</th>\r\n            <th>Time of Visit</th>\r\n            <th>Access Pass</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {newData.map((tabularData, i) => (\r\n            <tr key={i}>\r\n              <td>{i + 1}</td>\r\n              <td>{tabularData.resident}</td>\r\n              <td>{tabularData.visitor}</td>\r\n              <td>{tabularData.dateOfVisit}</td>\r\n              <td>{tabularData.time}</td>\r\n              <td>{tabularData.code}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyASCWZgSSU0l4QHN6w5Riub9rr9eWv-KEo\",\r\n  authDomain: \"neighborhood-37985.firebaseapp.com\",\r\n  projectId: \"neighborhood-37985\",\r\n  storageBucket: \"neighborhood-37985.appspot.com\",\r\n  messagingSenderId: \"913159918679\",\r\n  appId: \"1:913159918679:web:d822b1d8a61e3a79a1bf12\"\r\n};\r\n\r\nexport const createUserProfileDocument = async (user) => {\r\n  if (!user) return;\r\n\r\n  const userRef = db.doc(`users/${user.uid}`);\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { email } = user;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        email,\r\n        createdAt\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error Creating User\", error.message);\r\n    }\r\n  }\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nexport const authentication = firebase.auth();\r\n\r\nexport default db;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { authentication, createUserProfileDocument } from \"../firebase\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newUser, setNewUser] = useState({});\r\n  let history = useHistory();\r\n\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"userEmail\") {\r\n      setEmail(value);\r\n    } else if (name === \"userPassword\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    authentication\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        let user = userCredential.user;\r\n        createUserProfileDocument(user);\r\n        console.log(user);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        setNewUser(user);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        let errorCode = error.code;\r\n        let errorMessage = error.message;\r\n        console.log(errorCode, errorMessage);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"30%\",\r\n        margin: \"0 auto\",\r\n        border: \"1px solid grey\",\r\n        padding: \"15px\"\r\n      }}\r\n    >\r\n      <p>\r\n        Already have an account? <Link to=\"/login\">Login</Link>\r\n      </p>\r\n      <Form>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(event) => onChangeHandler(event)}\r\n            name=\"userEmail\"\r\n            // value={email}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"userPassword\"\r\n            value={password}\r\n            onChange={(event) => onChangeHandler(event)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n          Sign Up\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { authentication } from \"../firebase\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newUser, setNewUser] = useState({});\r\n  let history = useHistory();\r\n\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"userEmail\") {\r\n      setEmail(value);\r\n    } else if (name === \"userPassword\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    authentication\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        let user = userCredential.user;\r\n        console.log(user);\r\n        localStorage.setItem(\"user\", JSON.stringify(user.uid));\r\n        setNewUser(user);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        let errorCode = error.code;\r\n        let errorMessage = error.message;\r\n        console.log(errorCode, errorMessage);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"30%\",\r\n        margin: \"0 auto\",\r\n        border: \"1px solid grey\",\r\n        padding: \"15px\"\r\n      }}\r\n    >\r\n      <p>\r\n        Don't have an account? <Link to=\"/signup\">SignUp</Link>\r\n      </p>\r\n      <Form>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(event) => onChangeHandler(event)}\r\n            name=\"userEmail\"\r\n            // value={email}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"userPassword\"\r\n            value={password}\r\n            onChange={(event) => onChangeHandler(event)}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import \"./styles.css\";\nimport Tables from \"./components/Tables\";\nimport SignUp from \"./components/SignUp\";\nimport Login from \"./components/Login\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport db from \"./firebase\";\n\nexport default function App() {\n  const [data, setData] = useState([]);\n\n  const fetchData = () => {\n    const docRef = db.collection(\"Access Pass\");\n    docRef.get().then((querySnapshot) => {\n      const collections = querySnapshot.docs.map(\n        (doc) => doc.data().requestDetails\n      );\n      let collection = collections.filter((col) => col.length !== 0);\n      //console.log(collection);\n      setData(collection);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  //console.log(data);\n  return (\n    <div className=\"App\">\n      <h1>Neighborhood Access Pass Dashboard</h1>\n      <h2 style={{ marginBottom: \"30px\" }}>\n        Click on Each Resident name to view their requests\n      </h2>\n      <Switch>\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route\n          exact\n          path=\"/\"\n          render={(props) =>\n            localStorage.getItem(\"user\") ? (\n              <Tables {...props} tableData={data} />\n            ) : (\n              <Redirect to=\"/signup\" />\n            )\n          }\n        />\n      </Switch>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}